{"version":3,"sources":["../src/index.js"],"names":["ConsoleHandler","handle","record","findDebugLevel","process","env","DEBUG","minLevel","isHandling","level","key"],"mappings":";;;;;kBAOwBA,c;;AAPxB;;;;AACA;;;;AACA;;;;;;;;;;AAEA,IAAMC,SAAS,SAATA,MAAS,CAACC,MAAD;AAAA,oBAAO,8BAAP;;AAAA;;AAAA,SAAoB,wCAAc,wCAAcA,MAAd,CAAd,EAAqCA,MAArC,CAApB;AAAA,CAAf;AACA,IAAMC,iBAAiB,gCAAqBC,QAAQC,GAAR,CAAYC,KAAjC,CAAvB;;AAEe,SAASN,cAAT,CAAwBO,QAAxB,EAA0C;AAAA,sBAAV,8BAAU;;AAAA;;AACvD,OAAKA,QAAL,GAAgB,CAAhB;AACA,OAAKN,MAAL,GAAcA,MAAd;AACA,OAAKO,UAAL,GAAkB,UAACC,KAAD,EAAQC,GAAR;AAAA,WAAgBD,SAASN,eAAeI,QAAf,EAAyBG,GAAzB,CAAzB;AAAA,GAAlB;AACD","file":"index.js","sourcesContent":["import formatterANSI from 'nightingale-ansi-formatter/src';\nimport consoleOutput from 'nightingale-console-output/src';\nimport createFindDebugLevel from 'nightingale-debug/src';\n\nconst handle = (record: Object) => consoleOutput(formatterANSI(record), record);\nconst findDebugLevel = createFindDebugLevel(process.env.DEBUG);\n\nexport default function ConsoleHandler(minLevel: number) {\n  this.minLevel = 0;\n  this.handle = handle;\n  this.isHandling = (level, key) => level >= findDebugLevel(minLevel, key);\n}\n"]}