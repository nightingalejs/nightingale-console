{"version":3,"sources":["../src/index.js"],"names":["formatterANSI","consoleOutput","createFindDebugLevel","handle","record","findDebugLevel","process","env","DEBUG","ConsoleHandler","minLevel","isHandling","level","key"],"mappings":"AAAA,OAAOA,aAAP;AACA,OAAOC,aAAP;AACA,OAAOC,oBAAP;;;AAEA,MAAMC,SAAUC,MAAD;AAAA,oBAAO,UAAP;;AAAA;AAAA,SAAoBH,cAAcD,cAAcI,MAAd,CAAd,EAAqCA,MAArC,CAApB;AAAA,CAAf;AACA,MAAMC,iBAAiBH,qBAAqBI,QAAQC,GAAR,CAAYC,KAAjC,CAAvB;;AAEA,eAAe,SAASC,cAAT,CAAwBC,QAAxB,EAA0C;AAAA,sBAAV,UAAU;;AAAA;;AACvD,OAAKA,QAAL,GAAgB,CAAhB;AACA,OAAKP,MAAL,GAAcA,MAAd;AACA,OAAKQ,UAAL,GAAkB,CAACC,KAAD,EAAQC,GAAR,KAAgBD,SAASP,eAAeK,QAAf,EAAyBG,GAAzB,CAA3C;AACD","file":"index.js","sourcesContent":["import formatterANSI from 'nightingale-ansi-formatter/src';\nimport consoleOutput from 'nightingale-console-output/src';\nimport createFindDebugLevel from 'nightingale-debug/src';\n\nconst handle = (record: Object) => consoleOutput(formatterANSI(record), record);\nconst findDebugLevel = createFindDebugLevel(process.env.DEBUG);\n\nexport default function ConsoleHandler(minLevel: number) {\n  this.minLevel = 0;\n  this.handle = handle;\n  this.isHandling = (level, key) => level >= findDebugLevel(minLevel, key);\n}\n"]}